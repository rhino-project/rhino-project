diff --git a/src/publish/index.js b/src/publish/index.js
index 8e0e0328222ab8f30b0b18662579cadd2facfb1e..1702d8c804b98240e8bd4a239b007847c90cf2d6 100644
--- a/src/publish/index.js
+++ b/src/publish/index.js
@@ -23,7 +23,15 @@ import {
  * @returns {Promise<void>}
  */
 export const publish = async (options) => {
-  const { branchConfigs, packages, rootDir, branch, tag, ghToken } = options
+  const {
+    branchConfigs,
+    packages,
+    rootDir,
+    branch,
+    tag,
+    ghToken,
+    releaseTogether = false,
+  } = options
 
   const branchName = /** @type {string} */ (branch ?? currentGitBranch())
   const isMainBranch = branchName === 'main'
@@ -215,16 +223,21 @@ export const publish = async (options) => {
       .filter(Boolean)
 
   /** Uses packages and changedFiles to determine which packages have changed */
-  const changedPackages = RELEASE_ALL
+  const packagesWithChanges = packages.filter((pkg) => {
+    const changed = changedFiles.some(
+      (file) =>
+        file.startsWith(path.join(pkg.packageDir, 'src'))
+        || file.startsWith(path.join(pkg.packageDir, 'package.json')),
+    )
+    return changed
+  })
+
+  // If RELEASE_ALL is set, release all packages
+  // If releaseTogether is set, release all packages if any package has changed
+  // Otherwise, only release packages that have changed
+  const changedPackages = RELEASE_ALL || (releaseTogether && packagesWithChanges.length > 0)
     ? packages
-    : packages.filter((pkg) => {
-      const changed = changedFiles.some(
-        (file) =>
-          file.startsWith(path.join(pkg.packageDir, 'src'))
-          || file.startsWith(path.join(pkg.packageDir, 'package.json')),
-      )
-      return changed
-    })
+    : packagesWithChanges
 
   // If a package has a dependency that has been updated, we need to update the
   // package that depends on it as well.
diff --git a/src/publish/types.d.ts b/src/publish/types.d.ts
index 9128a96a9d3b61adbb68b5d694026ae66239e3c0..38b505a42f8dee1babcb35514a90eac1585e76bf 100644
--- a/src/publish/types.d.ts
+++ b/src/publish/types.d.ts
@@ -57,4 +57,6 @@ export type RunOptions = {
   tag?: string
   /** The GitHub token used to search for user metadata and make a GitHub release. */
   ghToken?: string
+  /** If releasing any package, release all packages together.  Defaults to false */
+  releaseTogether?: boolean
 }
