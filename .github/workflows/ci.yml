name: ci

on:
  workflow_dispatch:
    inputs:
      tag:
        description: override release tag
        required: false
  push:
    branches: ['main', 'alpha', 'beta', 'rc']

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

env:
  BUNDLE_PATH: vendor/bundle
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}

jobs:
  test-and-publish:
    name: Test & Publish
    if: github.repository == 'rhino-project/rhino-project'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: pnpm
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          working-directory: 'gems'
          bundler-cache: false
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline
      - name: Install Ruby dependencies
        working-directory: 'gems'
        # Separate so we don't lock the bundler with deployment true
        run: bundle install
      - name: Run Tests
        run: pnpm run test:ci
      - name: Publish
        run: |
          git config --global user.name 'JP Rosevear'
          git config --global user.email 'jprosevear@users.noreply.github.com'
          npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
          pnpm run cipublish
        env:
          GEM_HOST_API_KEY: ${{ secrets.GEM_HOST_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          TAG: ${{ inputs.tag }}
