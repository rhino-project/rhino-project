name: pr

on:
  pull_request:
    paths-ignore:
      - '**/*.md'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}
  FRONT_END_URL: http://localhost:3001
  ROOT_URL: http://localhost:3000
  DB_NAME: rhino_project
  DB_USERNAME: rhino_project
  DB_PASSWORD: rhino_project
  STRIPE_SECRET_KEY: 'FOR_TESTS'

jobs:
  test-client:
    name: Test Client
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline
      - name: Get base and head commits for `nx affected`
        uses: nrwl/nx-set-shas@v3
        with:
          main-branch-name: 'main'
      - name: Run Checks
        run: pnpm run test:pr
      - uses: davelosert/vitest-coverage-report-action@v2
        with:
          working-directory: 'packages/codemods'
  test-server:
    name: Test Server
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: gems
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: rhino_project
          POSTGRES_DB: rhino_project_test
          POSTGRES_PASSWORD: rhino_project
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ruby/setup-ruby@v1
        with:
          working-directory: 'gems'
          bundler-cache: true
      - name: Run Rubocop
        run: bundle exec rubocop
      - name: Run Gem Checks
        run: bundle exec rake test
