// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/ruby-rails-postgres
{
	"name": "Ruby on Rails & Postgres",
	"dockerComposeFile": "docker-compose.yml",
	"service": "app",
	"workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",

	// Features to add to the dev container. More info: https://containers.dev/features.
	"features": {
		"ghcr.io/devcontainers/features/node:1": { "version": "20.14.0"},
		"ghcr.io/devcontainers/features/github-cli:1": {}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// This can be used to network with other containers or the host.
	// "forwardPorts": [3000, 5432],

	"forwardPorts": [3000, 3001],
	"portsAttributes": {
	   "3000": {
			"label": "Server",
			"requireLocalPort": true
		},
		"3001": {
			"label": "Client",
			"requireLocalPort": true,
			"onAutoForward": "openBrowser"
		}
	},

	"updateContentCommand": {
		"server": "cd server && bundle install && rails rhino:dev:setup -- --no-prompt --db-name=postgres --db-user=postgres --db-password=postgres && rails db:setup",
		"client": "cd client && npm install"
	},

	"postAttachCommand": {
		"server": "cd server && rails s",
		"client": ".devcontainer/openport.sh & cd client && npm start"
	},

	"containerEnv": {
		// Client
		"VITE_API_ROOT_PATH": "https://${localEnv:CODESPACE_NAME}-3000.${localEnv:GITHUB_CODESPACES_PORT_FORWARDING_DOMAIN}",

		// Server
		"FRONT_END_URL": "https://${localEnv:CODESPACE_NAME}-3001.${localEnv:GITHUB_CODESPACES_PORT_FORWARDING_DOMAIN}"
	}
	// Configure tool-specific properties.
	// "customizations": {},

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
}
